version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      #KAFKA_OPTS: -javaagent:/usr/local/libs/jmx_prometheus_javaagent-0.17.2.jar=7075:/usr/local/config/sample_jmx_exporter.yml
    volumes:
      - ./kafka/libs:/usr/local/libs
      - ./kafka/config:/usr/local/config
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/etc/prometheus:/etc/prometheus
    command: 
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
  grafana:
    image: "grafana/grafana"
    container_name: grafana
    ports:
     - "3000:3000"
    environment:
      GF_PATHS_DATA : /var/lib/grafana
      GF_SECURITY_ADMIN_PASSWORD : kafka
    volumes:
      - ./grafana/var/lib/grafana:/var/lib/grafana
    depends_on:
      - prometheus
  kafka-exporter:
    image: danielqsj/kafka-exporter
    container_name: exporter
    ports:
      - "9308:9308"
    depends_on:
      - kafka
    #entrypoint: ["run.sh"]
    command:
      - --kafka.server=kafka:9092
    restart: on-failure